[{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/A_squidpySetup.html","id":"installing-squidpy","dir":"Articles","previous_headings":"","what":"Installing Squidpy","title":"Setting up computer for squidpy","text":"Squidpy python package analysis visualization spatial molecular data. Squidpy requires Python version >= 3.8 run. can either install Squidpy using pip conda. demonstrating install using conda. order , user conda miniconda installed system. install Squidpy via Conda run conda install -c conda-forge squidpy via command line.","code":""},{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/B_reproduceSquidpyData.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Reproducing data in squidpy package","text":"vignette demonstrate user reproduce MERFISH data used squidpy manuscript. authors squidpy documented work via Jupyter notebook translated R code. steps use purely R functions / objects obtain MERFISH data object present squidpy package.","code":""},{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/B_reproduceSquidpyData.html","id":"data-preperation","dir":"Articles","previous_headings":"","what":"Data preperation","title":"Reproducing data in squidpy package","text":"First, users need download raw data found Dryad. download data data manipulation. steps outlined .","code":""},{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/B_reproduceSquidpyData.html","id":"download-data","dir":"Articles","previous_headings":"Data preperation","what":"Download data","title":"Reproducing data in squidpy package","text":"","code":"library(rdryad) dat_path <- dryad_download(\"10.5061/dryad.8t8s248\") counts <- read.csv(dat_path[[1]])"},{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/B_reproduceSquidpyData.html","id":"subset-data","dir":"Articles","previous_headings":"Data preperation","what":"Subset data","title":"Reproducing data in squidpy package","text":"subset full data set metadata counts, retrieve genes.","code":"metadata <- counts[,1:9] counts_g <- counts[,10:170]  genes <- colnames(counts_g)"},{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/B_reproduceSquidpyData.html","id":"creating-the-csr-matrix","dir":"Articles","previous_headings":"Data preperation","what":"Creating the csr matrix","title":"Reproducing data in squidpy package","text":"First replace NA 0 create csr matrix, dropping 0 elements.","code":"counts_g <- replace(counts_g, is.na(counts_g), 0)  library(Matrix) mat <- data.matrix(counts_g) counts_g_sparse <- as(drop0(mat), \"RsparseMatrix\")"},{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/B_reproduceSquidpyData.html","id":"creating-a-singlecellexperiment-object","dir":"Articles","previous_headings":"Data preperation","what":"Creating a SingleCellExperiment object","title":"Reproducing data in squidpy package","text":"Jupyter notebook authors choose create AnnData object. Bioconductor prefer represent data SummarizedExperiment SingleCellExperiment object. primary difference composition data. prefer data represented genes rows samples columns. add spatial data reduced dimension.","code":"library(SingleCellExperiment) ## Loading required package: SummarizedExperiment ## Loading required package: MatrixGenerics ## Loading required package: matrixStats ##  ## Attaching package: 'MatrixGenerics' ## The following objects are masked from 'package:matrixStats': ##  ##     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, ##     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, ##     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, ##     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, ##     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, ##     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, ##     colWeightedMeans, colWeightedMedians, colWeightedSds, ##     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, ##     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, ##     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, ##     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, ##     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, ##     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, ##     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, ##     rowWeightedSds, rowWeightedVars ## Loading required package: GenomicRanges ## Loading required package: stats4 ## Loading required package: BiocGenerics ##  ## Attaching package: 'BiocGenerics' ## The following objects are masked from 'package:stats': ##  ##     IQR, mad, sd, var, xtabs ## The following objects are masked from 'package:base': ##  ##     anyDuplicated, aperm, append, as.data.frame, basename, cbind, ##     colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, ##     get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, ##     match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, ##     Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, ##     table, tapply, union, unique, unsplit, which.max, which.min ## Loading required package: S4Vectors ##  ## Attaching package: 'S4Vectors' ## The following objects are masked from 'package:Matrix': ##  ##     expand, unname ## The following objects are masked from 'package:base': ##  ##     expand.grid, I, unname ## Loading required package: IRanges ## Loading required package: GenomeInfoDb ## Loading required package: Biobase ## Welcome to Bioconductor ##  ##     Vignettes contain introductory material; view with ##     'browseVignettes()'. To cite Bioconductor, see ##     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. ##  ## Attaching package: 'Biobase' ## The following object is masked from 'package:MatrixGenerics': ##  ##     rowMedians ## The following objects are masked from 'package:matrixStats': ##  ##     anyMissing, rowMedians sce <- SingleCellExperiment(     assays = list(counts = t(counts_g_sparse)),     colData = metadata )  spatial <- colData(sce)[,c(\"Centroid_X\", \"Centroid_Y\")] reducedDim(sce, \"spatial\") <- spatial"},{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/B_reproduceSquidpyData.html","id":"notebook-continued","dir":"Articles","previous_headings":"","what":"Notebook continued","title":"Reproducing data in squidpy package","text":"try follow Jupyter notebook exactly using sce object instead anndata object. just data transformation. end result included squpidpy package.","code":"sce$Bregma = sce$Bregma * 100  unique(sce$Animal_ID) ##  [1]  1  2  3  4  5  6  7  8  9 10 11 16 17 18 19 12 13 14 15 20 21 22 23 24 34 ## [26] 35 36 31 32 33 25 26 27 28 29 30 sce_filt <- sce[,sce$Animal_ID == 1] sort(unique(sce_filt$Bregma)) ##  [1] -29 -24 -19 -14  -9  -4   1   6  11  16  21  26 #sce_list <- c() #spatial_list <- c() #for (i in sort(unique(sce_filt$Bregma))) { #    s_filt <- sce_filt[sce_filt$Bregma == i] #    sce_list <- c(sce_list, s_filt) #    spatial_filt <- reducedDim(s_filt) #}"},{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/C_reproduceSquidpyFigures.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Reproducing figures from squidpy manuscript","text":"vignette demonsrate user reproduce figures Squidpy manuscript. authors squpidpy documented work via Jupyter notebook translated R code. steps use R package reticulate translate python code R code create figures manuscript. Reticulate makes easy use python code within R changes. couple comparisons python code reticulate R code demonstrate changes may made.","code":""},{"path":[]},{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/C_reproduceSquidpyFigures.html","id":"import-python-packages","dir":"Articles","previous_headings":"Set up","what":"Import python packages","title":"Reproducing figures from squidpy manuscript","text":"Reticulate convenient function importing python libraries needed perform certain tasks. important note environment squidpy installed active order code work. examples, named conda environment squidpy ’ll run conda activate squidpy running follow code R.","code":"sc <- reticulate::import(\"scanpy\") sq <- reticulate::import(\"squidpy\") plt <- reticulate::import(\"matplotlib.pyplot\") sns <- reticulate::import(\"seaborn\") pd <- reticulate::import(\"pandas\") np <- reticulate::import(\"numpy\")"},{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/C_reproduceSquidpyFigures.html","id":"settings","dir":"Articles","previous_headings":"Set up","what":"Settings","title":"Reproducing figures from squidpy manuscript","text":"setting set Jupyter notebook can done well. converting python code R code . become $. first code chunk python code chunk following code chunk corresponding R code. settings translate comment python code.","code":"sc.logging.print_header() ## scanpy==1.9.3 anndata==0.9.1 umap==0.5.3 numpy==1.22.4 scipy==1.9.1 pandas==2.0.0 scikit-learn==1.2.2 statsmodels==0.13.5 python-igraph==0.10.4 pynndescent==0.5.9 sc.set_figure_params(facecolor=\"white\", figsize=(8, 8)) sc.settings.verbosity = 3 #sc.settings.dpi = 300 #sq.__version__ sc.settings.figdir = \"./figures\" sc$logging$print_header() sc$set_figure_params(facecolor=\"white\", figsize = c(8,8)) sc$settings$verbosity = 'hint' sc$settings$figdir = \"./figures\"  PATH_FIGURES = \"./figures\""},{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/C_reproduceSquidpyFigures.html","id":"obtain-data","dir":"Articles","previous_headings":"Set up","what":"Obtain data","title":"Reproducing figures from squidpy manuscript","text":"data used provided part squpidpy package. load R following code, note anndata object.","code":"adata <- sq$datasets$seqfish() adata # 19416 obs x 351 vars ## AnnData object with n_obs × n_vars = 19416 × 351 ##     obs: 'Area', 'celltype_mapped_refined' ##     uns: 'celltype_mapped_refined_colors' ##     obsm: 'X_umap', 'spatial'"},{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/C_reproduceSquidpyFigures.html","id":"figures","dir":"Articles","previous_headings":"","what":"Figures","title":"Reproducing figures from squidpy manuscript","text":"rest vignette following Jupyter notebook translating python code R. plot created saved figures directory future use.","code":""},{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/C_reproduceSquidpyFigures.html","id":"figure-1","dir":"Articles","previous_headings":"Figures","what":"Figure 1","title":"Reproducing figures from squidpy manuscript","text":"Figure 1","code":"sc$pl$spatial(     adata,     color = \"celltype_mapped_refined\",     save = \"_seqfish.png\",     spot_size = 0.03 )"},{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/C_reproduceSquidpyFigures.html","id":"figure-2","dir":"Articles","previous_headings":"Figures","what":"Figure 2","title":"Reproducing figures from squidpy manuscript","text":"figure show python code corresponding R code demonstrate may differences. Figure 2","code":"sq.gr.spatial_neighbors(adata, delaunay=True) ## Creating graph using `generic` coordinates and `None` transform and `1` libraries. ## Adding `adata.obsp['spatial_connectivities']` ##        `adata.obsp['spatial_distances']` ##        `adata.uns['spatial_neighbors']` ## Finish (0:00:02) sq.gr.nhood_enrichment(adata, cluster_key=\"celltype_mapped_refined\", n_perms=1000) ## Calculating neighborhood enrichment using `1` core(s) ##    0%|          | 0/1000 [00:00<?, ?/s]   2%|1         | 17/1000 [00:00<00:05, 168.95/s]   8%|8         | 84/1000 [00:00<00:02, 456.88/s]  14%|#4        | 142/1000 [00:00<00:01, 510.87/s]  22%|##2       | 221/1000 [00:00<00:01, 614.59/s]  29%|##9       | 290/1000 [00:00<00:01, 640.27/s]  36%|###5      | 359/1000 [00:00<00:00, 656.55/s]  42%|####2     | 425/1000 [00:00<00:00, 651.17/s]  49%|####9     | 494/1000 [00:00<00:00, 661.56/s]  56%|#####6    | 561/1000 [00:00<00:00, 624.65/s]  64%|######4   | 642/1000 [00:01<00:00, 673.59/s]  71%|#######1  | 710/1000 [00:01<00:00, 653.77/s]  78%|#######7  | 779/1000 [00:01<00:00, 661.65/s]  85%|########4 | 846/1000 [00:01<00:00, 651.36/s]  92%|#########1| 918/1000 [00:01<00:00, 668.35/s]  99%|#########8| 986/1000 [00:01<00:00, 652.27/s] 100%|##########| 1000/1000 [00:01<00:00, 630.87/s] ## Adding `adata.uns['celltype_mapped_refined_nhood_enrichment']` ## Finish (0:00:01) arr = np.array(adata.uns[\"celltype_mapped_refined_nhood_enrichment\"][\"zscore\"])  sq.pl.nhood_enrichment(     adata,     cluster_key=\"celltype_mapped_refined\",     cmap=\"coolwarm\",     title=\"\",     method=\"ward\",     dpi=300,     figsize=(5, 4),     save=\"nhod_seqfish.png\",     cbar_kwargs={\"label\": \"Z-score\"},     vmin=-50,     vmax=50, ) sq$gr$spatial_neighbors(adata, delaunay = TRUE) # added to adata.obsp, adata.uns sq$gr$nhood_enrichment(adata, cluster_key = \"celltype_mapped_refined\", n_perms = 100) # added to adata.uns  arr <- np$array(adata$uns[\"celltype_mapped_refined_nhood_enrichment\"][\"zscore\"])  sq$pl$nhood_enrichment(     adata,     cluster_key = \"celltype_mapped_refined\",     cmap = \"coolwarm\",     title = \"\",     method = \"ward\",     dpi = 300,     figsize = c(5, 4),     save = \"nhood_seqfish.png\",     cbar_kwargs = list(label = \"Z-score\"),     vmin = -50,     vmax = 50 )"},{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/C_reproduceSquidpyFigures.html","id":"figure-3","dir":"Articles","previous_headings":"Figures","what":"Figure 3","title":"Reproducing figures from squidpy manuscript","text":"Figure 3","code":"sq$pl$nhood_enrichment(     adata,     cluster_key = \"celltype_mapped_refined\",     cmap = \"inferno\",     title = \"\",     method = \"ward\",     dpi = 300,     figsize = c(5, 4),     save = \"nhod_seqfish.png\",     cbar_kwargs = list(label = \"Z-score\"),     vmin = -50,     vmax = 150 )"},{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/C_reproduceSquidpyFigures.html","id":"figure-4","dir":"Articles","previous_headings":"Figures","what":"Figure 4","title":"Reproducing figures from squidpy manuscript","text":"Figure 4","code":"ax <- plt$subplots(     figsize = c(3, 6) ) sc$pl$spatial(     adata,     color = \"celltype_mapped_refined\",     groups = c(         \"Endothelium\",         \"Haematoendothelial progenitors\",         \"Allantois\",         \"Lateral plate mesoderm\",         \"Intermediate mesoderm\",         \"Presomitic mesoderm\",         \"Dermomyotome\"     ),     save = \"_endo_seqfish.png\",     frameon = FALSE, #    ax = ax,     show = FALSE,     spot_size = 0.03 ) ## [[1]] ## <Axes: title={'center': 'celltype_mapped_refined'}, xlabel='spatial1', ylabel='spatial2'>"},{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/C_reproduceSquidpyFigures.html","id":"figure-5","dir":"Articles","previous_headings":"Figures","what":"Figure 5","title":"Reproducing figures from squidpy manuscript","text":"Figure 5","code":"sc$pl$spatial(     adata,     color = \"celltype_mapped_refined\",     groups = c(         \"Allantois\",         \"Lateral plate mesoderm\",         \"Intermediate mesoderm\",         \"Presomitic mesoderm\"     ),     save = \"_meso_seqfish.png\",     spot_size = 0.03, #    ax = ax,     show = FALSE ) ## [[1]] ## <Axes: title={'center': 'celltype_mapped_refined'}, xlabel='spatial1', ylabel='spatial2'>"},{"path":"https://Kayla-Morrell.github.io/SquidpyR/articles/C_reproduceSquidpyFigures.html","id":"figure-6","dir":"Articles","previous_headings":"Figures","what":"Figure 6","title":"Reproducing figures from squidpy manuscript","text":"Figure 6","code":"sq$gr$co_occurrence(     adata,     cluster_key = \"celltype_mapped_refined\" ) # added to adata.uns   sq$pl$co_occurrence(     adata,     cluster_key = \"celltype_mapped_refined\",     clusters = \"Lateral plate mesoderm\",     figsize = c(5, 3),     legend = FALSE,     dpi = 300,     save = \"co_occurrence_seqfish\" )"},{"path":"https://Kayla-Morrell.github.io/SquidpyR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kayla Interdonato. Author, maintainer.","code":""},{"path":"https://Kayla-Morrell.github.io/SquidpyR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Interdonato K (2023). SquidpyR: Utilizing squidpy within R. R package version 0.99.0, https://kayla-morrell.github.io/SquidpyR/.","code":"@Manual{,   title = {SquidpyR: Utilizing squidpy within R},   author = {Kayla Interdonato},   year = {2023},   note = {R package version 0.99.0},   url = {https://kayla-morrell.github.io/SquidpyR/}, }"}]
